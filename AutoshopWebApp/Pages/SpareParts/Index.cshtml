@page
@model AutoshopWebApp.Pages.SpareParts.IndexModel

@{
    ViewData["Title"] = "Запчасти";
}

<h2>Запчасти</h2>


<form class="form-inline" id="searchForm" method="get" onsubmit="">
    <div class="form-group" style="font-size:20px">
        Поиск: <input class="form-control" id="search" type="text" name="search" />
        <button type="button" onclick="getData()" class="btn btn-default">Найти</button>
    </div>
    <a class="btn btn-default" asp-page="Create">Добавить</a>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.SparePart[0].PartName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SparePart[0].MarkAndModel.CarMark)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SparePart[0].MarkAndModel.CarModel)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SparePart[0].PartPrice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SparePart[0].PartCount)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody id="sparts"></tbody>
</table>

@section Scripts {
    <script>
        const uri = "api/spareparts"
        let spareParts = null;
        let templateData = null;

        $(document).ready(function () {
            getData();
        });

        function getData(showDel) {
            const searchData = $("#searchForm").serialize();

            $.ajax({
                type: "GET",
                url: uri,
                data: searchData,
                cache: false,
                success: function (data) {
                    const tbody = $("#sparts");
                    $(tbody).empty();

                    $.get("/templates/spare-part-table-element.html", function (result) {
                        const template = $.trim(result);

                        $.each(data, function (key, value) {
                            let temp = makeFromTemplateRecoursive(value, template);
                            tbody.append(temp);
                        });

                        spareParts = data;
                    });
                }
            })
        }

        function makeFromTemplateRecoursive(value, template) {
            let temp = template;

            $.each(value, function (k, v) {

                if (typeof (v) != 'object') {
                    const regex = new RegExp('{{' + k + '}}', 'ig')
                    temp = temp.replace(regex, v);
                }
                else {
                    temp = makeFromTemplateRecoursive(v, temp)
                }
            });

            return temp;
        }
    </script>
}
